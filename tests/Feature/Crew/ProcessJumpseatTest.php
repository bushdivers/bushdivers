<?php

namespace Tests\Feature\Crew;

use App\Models\Airport;
use App\Models\User;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class ProcessJumpseatTest extends TestCase
{
    use RefreshDatabase;

    protected User $user;
    protected Airport $fromAirport, $toAirport;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->fromAirport = Airport::factory()->create([
            'identifier' => 'AYMR',
            'is_hub' => false
        ]);
        $this->toAirport = Airport::factory()->create([
            'identifier' => 'AYMH',
            'name' => 'Mount hagen',
            'lat' => -5.82781,
            'lon' => 144.29953,
            'is_hub' => false
        ]);
        $this->user = User::factory()->create([
            'current_airport_id' => $this->toAirport->id
        ]);
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_user_moves_to_new_destination()
    {
        $data = [
            'cost' => 2.00,
            'icao' => 'AYMR'
        ];
        $this->actingAs($this->user)->post('/jumpseat', $data);
        $this->user->refresh();
        $this->assertEquals($this->fromAirport->id, $this->user->current_airport_id);
    }

    public function test_cost_added_to_user_transactions()
    {
        Airport::factory()->create([
            'identifier' => 'PANC',
            'is_hub' => false,
        ]);

        $data = [
            'cost' => 2.00,
            'icao' => 'PANC'
        ];
        $this->actingAs($this->user)->post('/jumpseat', $data);
        $this->assertDatabaseHas('user_accounts', [
            'user_id' => $this->user->id,
            'total' => -2.00
        ]);
    }

    public function test_no_cost_added_to_user_transactions_if_between_hq()
    {
        $fromAirport = Airport::factory()->create([
            'identifier' => 'AYMG',
            'is_hub' => true,
        ]);

        $data = [
            'cost' => 2.00,
            'icao' => 'AYMR'
        ];
        /** @var User */
        $user = User::factory()->create([
            'current_airport_id' => $fromAirport->id
        ]);
        $this->actingAs($user)->post('/jumpseat', $data);
        $this->assertDatabaseMissing('user_accounts', [
            'user_id' => $this->user->id,
            'total' => -2.00
        ]);
    }
}
