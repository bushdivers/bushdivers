<?php

namespace Tests\Feature\Api\Airport;

use App\Models\Airport;
use App\Models\User;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Laravel\Sanctum\Sanctum;
use Tests\TestCase;

class GetCostOfJumpseatTest extends TestCase
{
    use RefreshDatabase;

    protected Model $fromAirport;
    protected Model $toAirport;
    protected Model $user;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->user = User::factory()->create([
            'rank_id' => 1,
            'flights_time' => 299,
            'points' => 49,
            'created_at' => Carbon::now()->addYears(-2)
        ]);

        $this->fromAirport = Airport::factory()->create();
        $this->toAirport = Airport::factory()->create([
            'identifier' => 'AYMN',
            'name' => 'Mendi',
            'lat' => -5.82781,
            'lon' => 144.29953,
            'is_hub' => false
        ]);

        Sanctum::actingAs(
            $this->user,
            ['*']
        );
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_cost_returned_successfully()
    {
        $response = $this->getJson('/api/jumpseat/cost/'.$this->fromAirport->identifier.'/'.$this->toAirport->identifier);
        $response->assertStatus(200);
    }

    public function test_cost_is_correct()
    {
        $response = $this->getJson('/api/jumpseat/cost/'.$this->fromAirport->identifier.'/AYMN');
        $cost = round(71.4 * 0.25,2);
        $response->assertJson(['cost' => $cost]);
    }

    public function test_invalid_airport_fails()
    {
        $response = $this->getJson('/api/jumpseat/cost/'.$this->fromAirport->identifier.'/AAAA');
        $response->assertStatus(404);
    }
}
