<?php

namespace Tests\Feature\Api\Fleet;

use App\Models\Aircraft;
use App\Models\Fleet;
use App\Models\User;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Laravel\Sanctum\Sanctum;
use Tests\TestCase;

class GetAvailableAircraftTest extends TestCase
{
    use RefreshDatabase;

    protected Model $aircraft;
    protected Model $fleet;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->fleet = Fleet::factory()->create();
        $this->aircraft = Aircraft::factory()->create([
            'fleet_id' => $this->fleet->id
        ]);
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_aircraft_returned_ok()
    {
        Sanctum::actingAs(
            User::factory()->create(),
            ['*']
        );
        $response = $this->getJson('/api/aircraft/'.'AYMR');

        $response->assertStatus(200);
    }

    public function test_aircraft_details_returned()
    {
        Sanctum::actingAs(
            User::factory()->create(),
            ['*']
        );
        $response = $this->getJson('/api/aircraft/'.'AYMR');

        $response->assertJsonFragment(['id' => $this->aircraft->id]);
    }

    public function test_aircraft_details_not_available_for_icao_with_no_aircraft()
    {
        Sanctum::actingAs(
            User::factory()->create(),
            ['*']
        );
        $response = $this->getJson('/api/aircraft/'.'EGLL');

        $response->assertJsonCount(0, 'aircraft' );
    }
}
