<?php

namespace Tests\Feature\Api\ContractCargo;

use App\Models\Contract;
use App\Models\ContractCargo;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class SplitCargoTest extends TestCase
{
    use RefreshDatabase;

    protected Model $contractCargo;
    protected Model $contract;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->contract = Contract::factory()->create();
        $this->contractCargo = ContractCargo::factory()->create([
            'contract_id' => $this->contract->id,
            'cargo_qty' => 400
        ]);
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_splitting_cargo_returns_201()
    {
        $data = [
            'id' => $this->contractCargo->id,
            'qty' => 100
        ];
        $response = $this->postJson('/api/cargo/split', $data);

        $response->assertStatus(201);
    }

    public function test_splitting_cargo_has_new_entry()
    {
        $data = [
            'id' => $this->contractCargo->id,
            'qty' => 100
        ];
        $response = $this->postJson('/api/cargo/split', $data);

        $this->assertDatabaseHas('contract_cargos', [
            'contract_id' => $this->contract->id,
            'cargo_qty' => 100
        ]);
    }

    public function test_splitting_cargo_has_existing_with_remaining()
    {
        $data = [
            'id' => $this->contractCargo->id,
            'qty' => 100
        ];
        $response = $this->postJson('/api/cargo/split', $data);

        $this->assertDatabaseHas('contract_cargos', [
            'id' => $this->contractCargo->id,
            'cargo_qty' => 300
        ]);
    }
}
