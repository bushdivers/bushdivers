<?php

namespace Tests\Feature\Api\Contracts;

use App\Models\Airport;
use App\Models\Contract;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class BidForContractTest extends TestCase
{
    use RefreshDatabase;
    protected Model $contract;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->contract = Contract::factory()->create();
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_returns_success_response()
    {
        $response = $this->postJson('/api/contracts/bid', ['id' => $this->contract->id]);
        $response->assertStatus(200);
    }

    public function test_contract_made_unavailable()
    {
        $this->postJson('/api/contracts/bid', ['id' => $this->contract->id]);
        $this->contract->refresh();
        $this->assertEquals(false, $this->contract->is_available);
    }

    public function test_returns_not_found_response_when_invalid()
    {
        $response = $this->postJson('/api/contracts/bid', ['id' => 2]);
        $response->assertStatus(404);
    }

    public function test_fuel_contract_returns_fuel_to_airport()
    {
        $airport = Airport::factory()->create([
            'identifier' => 'AYMN',
            'avgas_qty' => 10,
            'is_hub' => false
        ]);
        $contract = Contract::factory()->create([
            'dep_airport_id' => 'AYMN',
            'is_fuel' => true,
            'fuel_qty' => 100,
            'fuel_type' => 1
        ]);
        $this->postJson('/api/contracts/bid', ['id' => $contract->id, 'action' => 'remove']);
        $airport->refresh();
        $this->assertEquals(110, $airport->avgas_qty);
    }

    public function test_fuel_contract_is_removed()
    {
        $airport = Airport::factory()->create([
            'identifier' => 'AYMN',
            'avgas_qty' => 10,
            'is_hub' => false
        ]);
        $contract = Contract::factory()->create([
            'dep_airport_id' => 'AYMN',
            'is_fuel' => true,
            'fuel_qty' => 100,
            'fuel_type' => 1
        ]);
        $this->postJson('/api/contracts/bid', ['id' => $contract->id, 'action' => 'remove']);
        $this->assertDatabaseMissing('contracts', [
            'id' => $contract->id
        ]);
    }
}
