<?php

namespace Tests\Feature\Api\Contracts;

use App\Models\Contract;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Ramsey\Uuid\Uuid;
use Tests\TestCase;

class ShareContractTest extends TestCase
{
    use RefreshDatabase;

    protected Model $contract;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->contract = Contract::factory()->create([
            'user_id' => 1,
            'is_available' => false
        ]);
    }

    /**
     * A basic feature test example.
     */
    public function test_contract_is_shared(): void
    {
        $response = $this->postJson('/api/contracts/share', ['id' => $this->contract->id]);
        $response->assertStatus(200);
        $this->assertDatabaseHas('contracts', [
            'id' => $this->contract->id,
            'user_id' => null,
            'is_shared' => true
        ]);
    }

    public function test_share_contract_on_active_pirep_fails()
    {
        $id = Uuid::uuid4();
        $c = Contract::factory()->create([
            'cargo_qty' => 3800,
            'cargo_type' => 1,
            'payload' => 3800,
            'contract_value' => 6525,
            'active_pirep' => $id
        ]);

        $data = [
            'id' => $c->id
        ];
        $response = $this->postJson('/api/contracts/share', $data);
        $response->assertStatus(422);
        $response->assertJson(['message' => 'Contract is in progress']);
    }
}
