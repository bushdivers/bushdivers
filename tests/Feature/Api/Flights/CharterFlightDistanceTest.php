<?php

namespace Tests\Feature\Api\Flights;

use App\Models\Airport;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class CharterFlightDistanceTest extends TestCase
{
    use RefreshDatabase;

    protected Model $fromAirport;
    protected Model $toAirport;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->fromAirport = Airport::factory()->create();
        $this->toAirport = Airport::factory()->create([
            'identifier' => 'AYMH',
            'name' => 'Mount hagen',
            'lat' => -5.82781,
            'lon' => 144.29953
        ]);
    }
    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_distance_for_chart_flight_returns_success()
    {
        $response = $this->get('/api/flights/distance/'.$this->fromAirport->identifier.'/'.$this->toAirport->identifier);
        $response->assertStatus(200);
    }

    public function test_distance_for_chart_flight_returns_distance()
    {
        $response = $this->get('/api/flights/distance/'.$this->fromAirport->identifier.'/'.$this->toAirport->identifier);
        $response->assertJsonFragment(['distance' => 71.4]);
    }
}
