<?php

namespace Tests\Feature\Api\Tracker;

use App\Models\Aircraft;
use App\Models\Booking;
use App\Models\Fleet;
use App\Models\Flight;
use App\Models\Pirep;
use App\Models\User;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Laravel\Sanctum\Sanctum;
use Tests\TestCase;

class UpdatePirepStatusTest extends TestCase
{
    use RefreshDatabase;

    protected Model $user;
    protected Model $pirep;
    protected Model $flight;
    protected Model $fleet;
    protected Model $aircraft;
    protected Model $booking;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = User::factory()->create();
        $this->fleet = Fleet::factory()->create();
        $this->aircraft = Aircraft::factory()->create([
            'fleet_id' => $this->fleet->id
        ]);
        $this->flight = Flight::factory()->create();
        $this->booking = Booking::factory()->create([
            'flight_id' => $this->flight->id,
            'user_id' => $this->user->id
        ]);
        $this->pirep = Pirep::factory()->create([
            'user_id' => $this->user->id,
            'flight_id' => $this->flight->id,
            'booking_id' => $this->booking->id,
            'aircraft_id' => $this->aircraft
        ]);

        $this->booking->has_dispatch = $this->pirep->id;
        $this->booking->save();

    }
    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_pirep_submitted_successfully()
    {
        Sanctum::actingAs(
            $this->user,
            ['*']
        );
        $data = [
            'pirep_id' => $this->pirep->id,
            'status' => 2
        ];

        $response = $this->putJson('/api/pirep/status', $data);

        $response->assertStatus(200);
    }
}
