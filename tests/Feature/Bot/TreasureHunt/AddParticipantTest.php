<?php

namespace Tests\Feature\Bot\TreasureHunt;

use Illuminate\Database\Schema\Blueprint;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Schema;
use Tests\TestCase;

class AddParticipantTest extends TestCase
{
    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Schema::connection('sqlite')->create('th_participants', function (Blueprint $table) {
            $table->string('pilot')->primary();
            $table->integer('progress')->default(1);
            $table->timestamps();
        });
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_new_participant_is_added()
    {
        $data = ['pilot' => 'BDV0001'];
        $headers = ['X-TOKEN' => env('BOT_TOKEN')];
        $response = $this->postJson('/api/bot/treasure/add', $data, $headers);
        $response->assertStatus(201);
        $this->assertDatabaseHas('th_participants', [
            'pilot' => 'BDV0001'
        ]);
    }

    public function test_existing_participant_is_not_added_again()
    {
        DB::table('th_participants')->insert([
            'pilot' => 'BDV0001'
        ]);

        $data = ['pilot' => 'BDV0001'];
        $headers = ['X-TOKEN' => env('BOT_TOKEN')];
        $response = $this->postJson('/api/bot/treasure/add', $data, $headers);
        $response->assertStatus(422);
    }
}
