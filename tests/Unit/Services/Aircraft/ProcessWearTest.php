<?php

namespace Tests\Unit\Services\Aircraft;

use App\Models\Aircraft;
use App\Models\AircraftEngine;
use App\Models\Fleet;
use App\Services\Aircraft\ProcessAircraftCondition;
use App\Services\Aircraft\UpdateAircraftCondition;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class ProcessWearTest extends TestCase
{
    use RefreshDatabase;

    protected Model $aircraft;
    protected Model $aircraftEngine;
    protected Model $fleet;
    protected ProcessAircraftCondition $processAircraftCondition;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->fleet = Fleet::factory()->create();
        $this->processAircraftCondition = $this->app->make(ProcessAircraftCondition::class);
    }

    /**
     * A basic unit test example.
     *
     * @return void
     */
    public function test_aircraft_wear_successful()
    {
        $aircraft = Aircraft::factory()->create([
            'fleet_id' => $this->fleet->id,
            'wear' => 100,
            'flight_time_mins' => 0
        ]);
        $aircraftEngine = AircraftEngine::factory()->create([
            'aircraft_id' => $aircraft->id,
            'wear' => 100
        ]);

        $this->processAircraftCondition->execute($aircraft->id);

        $aircraft->refresh();
        $aircraftEngine->refresh();

        $this->assertEquals(99.3, $aircraft->wear);
        $this->assertEquals(99.5, $aircraftEngine->wear);
    }
}
