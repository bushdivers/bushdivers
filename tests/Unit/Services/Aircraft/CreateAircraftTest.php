<?php

namespace Tests\Unit\Services\Aircraft;

use App\Models\Airport;
use App\Models\Fleet;
use App\Models\User;
use App\Services\Aircraft\CreateAircraft;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class CreateAircraftTest extends TestCase
{
    use RefreshDatabase;

    protected CreateAircraft $createAircraft;
    protected Model $user;
    protected Model $airport;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = User::factory()->create();
        $this->airport = Airport::factory()->create([
            'identifier' => 'AYMR',
            'lat' => -6.36188,
            'lon' => 143.23070
        ]);
        $this->airport = Airport::factory()->create([
            'identifier' => 'EGBS',
            'is_hub' => true
        ]);
        $this->createAircraft = $this->app->make(CreateAircraft::class);
    }

    /**
     * A basic unit test example.
     *
     * @return void
     */
    public function test_aircraft_is_created()
    {
        $fleet = Fleet::factory()->create();
        $data = [
            'id' => $fleet->id,
            'deliveryIcao' => 'AYMR',
            'reg' => 'G-RWW',
            'hub' => 'EGBS'
        ];
        $this->createAircraft->execute($data, $this->user, $this->airport);
        $this->assertDatabaseHas('aircraft', [
            'registration' => $data['reg']
        ]);
    }

    public function test_single_engine_created()
    {
        $fleet = Fleet::factory()->create();
        $data = [
            'id' => $fleet->id,
            'deliveryIcao' => 'AYMR',
            'reg' => 'G-RWW',
            'hub' => 'EGBS'
        ];
        $aircraft = $this->createAircraft->execute($data, $this->user, $this->airport);
        $this->assertDatabaseHas('aircraft_engines', [
            'aircraft_id' => $aircraft->id
        ]);
        $this->assertDatabaseCount('aircraft_engines', 1);
    }

    public function test_multi_engine_created()
    {
        $fleet = Fleet::factory()->create([
            'number_of_engines' => 2
        ]);
        $data = [
            'id' => $fleet->id,
            'deliveryIcao' => 'AYMR',
            'reg' => 'G-RWW',
            'hub' => 'EGBS'
        ];
        $aircraft = $this->createAircraft->execute($data, $this->user, $this->airport);
        $this->assertDatabaseHas('aircraft_engines', [
            'aircraft_id' => $aircraft->id
        ]);
        $this->assertDatabaseCount('aircraft_engines', 2);
    }
}
