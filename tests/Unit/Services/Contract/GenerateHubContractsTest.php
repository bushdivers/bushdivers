<?php

namespace Tests\Unit\Services\Contract;

use App\Models\Airport;
use App\Services\Contracts\FindHubsInNeedOfContracts;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\DB;
use Tests\TestCase;

class GenerateHubContractsTest extends TestCase
{
    use RefreshDatabase;

    protected FindHubsInNeedOfContracts $findHubsInNeedOfContracts;
    protected Model $airport1;
    protected Model $airport2;
    protected Model $airport3;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        DB::table('cargo_types')->insert([
            ['type' => 1, 'text' => 'Solar Panels'],
            ['type' => 1, 'text' => 'Building materials'],
            ['type' => 2, 'text' => 'Medics'],
            ['type' => 2, 'text' => 'Locals'],
        ]);
        $this->airportHub = Airport::factory()->create([
            'identifier' => 'AYMR',
            'name' => 'Moro',
            'country' => 'PG',
            'is_hub' => true,
            'lat' => -6.36188,
            'lon' => 143.23070,
            'altitude' => 100
        ]);
        $this->airport2 = Airport::factory()->create([
            'identifier' => 'AYMN',
            'name' => 'Mendi',
            'country' => 'PG',
            'is_hub' => false,
            'lat' => -6.14617,
            'lon' => 143.65733,
            'altitude' => 100
        ]);
        $this->airport3 = Airport::factory()->create([
            'identifier' => 'AYFO',
            'name' => 'Fogomaiu Airstrip',
            'country' => 'PG',
            'is_hub' => false,
            'lat' => -6.50917,
            'lon' => 143.07904,
            'altitude' => 100
        ]);
        $this->findHubsInNeedOfContracts = $this->app->make(FindHubsInNeedOfContracts::class);
    }
    /**
     * A basic unit test example.
     *
     * @return void
     */
    public function test_contract_from_hub_is_generated()
    {
        $this->findHubsInNeedOfContracts->execute();
        $this->assertDatabaseHas('contracts', [
            'dep_airport_id' => $this->airportHub->identifier,
            'arr_airport_id' => $this->airport2->identifier
        ]);
    }

    public function test_contract_from_hub_cargo_is_generated()
    {
        $this->findHubsInNeedOfContracts->execute();
        $this->assertDatabaseHas('contract_cargos', [
            'current_airport_id' => $this->airportHub->identifier
        ]);
    }

    public function test_contract_to_hub_is_generated()
    {
        $this->findHubsInNeedOfContracts->execute();
        $this->assertDatabaseHas('contracts', [
            'dep_airport_id' => $this->airport2->identifier,
            'arr_airport_id' => $this->airportHub->identifier
        ]);
    }

    public function test_contract_to_hub_cargo_is_generated()
    {
        $this->findHubsInNeedOfContracts->execute();
        $this->assertDatabaseHas('contract_cargos', [
            'current_airport_id' => $this->airport2->identifier
        ]);
    }
}
