<?php

namespace Tests\Unit\Services\Contract;

use App\Models\Airport;
use App\Services\Contracts\StoreContracts;
use Carbon\Carbon;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class StoreContractTest extends TestCase
{
    use RefreshDatabase;

    protected StoreContracts $storeContracts;
    protected Airport $aymr, $aymh;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->storeContracts = $this->app->make(StoreContracts::class);

        $this->aymr = Airport::factory()->create(['identifier' => 'AYMR']);
        $this->aymh = Airport::factory()->create(['identifier' => 'AYMH']);
    }

    /**
     * A basic unit test example.
     *
     * @return void
     */
    public function test_contract_details_stored()
    {
        $data = [
            [
                'departure' => 'AYMR',
                'destination' => 'AYMH',
                'distance' => 60,
                'heading' => 45,
                'contract_value' => 1000,
                'cargo_type' => 1,
                'cargo' => 'Test',
                'cargo_qty' => 10,
                'expires_at' => Carbon::now()->addDays(2),
                'is_fuel' => false,
            ]
        ];
        $this->storeContracts->execute($data);
        $this->assertDatabaseHas('contracts', [
            'dep_airport_id' => $this->aymr->id,
            'arr_airport_id' => $this->aymh->id,
        ]);
    }

    public function test_multiple_contract_details_stored()
    {
        $data = [
            [
                'departure' => 'AYMR',
                'destination' => 'AYMH',
                'distance' => 60,
                'heading' => 45,
                'contract_value' => 1000,
                'cargo_type' => 1,
                'cargo' => 'Test',
                'cargo_qty' => 10,
                'expires_at' => Carbon::now()->addDays(2),
                'is_fuel' => false,
            ],
            [
                'departure' => 'AYMR',
                'destination' => 'AYMH',
                'distance' => 60,
                'heading' => 45,
                'contract_value' => 1000,
                'cargo_type' => 1,
                'cargo' => 'Test',
                'cargo_qty' => 10,
                'expires_at' => Carbon::now()->addDays(2),
                'is_fuel' => false,
            ]
        ];
        $this->storeContracts->execute($data);
        $this->assertDatabaseCount('contracts', 2);
    }

    public function test_fuel_contract_details_stored()
    {
        $data = [
            [
                'departure' => 'AYMR',
                'destination' => 'AYMH',
                'distance' => 60,
                'heading' => 45,
                'contract_value' => 1000,
                'cargo_type' => 1,
                'cargo' => '10 gal 100LL Fuel',
                'cargo_qty' => 10,
                'expires_at' => Carbon::now()->addDays(2),
                'is_fuel' => true,
                'fuel_qty' => 10,
                'fuel_type' => 1
            ]
        ];
        $this->storeContracts->execute($data);
        $this->assertDatabaseHas('contracts', [
            'arr_airport_id' => $this->aymh->id,
            'is_fuel' => true
        ]);
    }
}
