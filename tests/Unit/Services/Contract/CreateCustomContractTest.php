<?php

namespace Tests\Unit\Services\Contract;

use App\Models\Airport;
use App\Models\User;
use App\Services\Contracts\CreateCustomRoute;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class CreateCustomContractTest extends TestCase
{
    use RefreshDatabase;

    protected CreateCustomRoute $createCustomRoute;
    protected Model $airport1;
    protected Model $airport2;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->createCustomRoute = $this->app->make(CreateCustomRoute::class);
        $this->airport1 = Airport::factory()->create([
            'identifier' => 'AYMN',
            'name' => 'Mendi',
            'country' => 'PG',
            'is_hub' => false,
            'lat' => -6.14617,
            'lon' => 143.65733,
            'altitude' => 100
        ]);
        $this->airport2 = Airport::factory()->create([
            'identifier' => 'AYFO',
            'name' => 'Fogomaiu Airstrip',
            'country' => 'PG',
            'is_hub' => false,
            'lat' => -6.50917,
            'lon' => 143.07904,
            'altitude' => 100
        ]);
    }

    /**
     * A basic unit test example.
     *
     * @return void
     */
    public function test_contract_generates_successfully()
    {
        $this->createCustomRoute->execute($this->airport1->identifier, $this->airport2->identifier, 1);
        $this->assertDatabaseHas('contracts', [
            'dep_airport_id' => $this->airport1->id,
            'arr_airport_id' => $this->airport2->id,
            'is_available' => 0,
            'user_id' => 1
        ]);
    }
}
