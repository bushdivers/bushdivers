<?php

namespace Tests\Unit\Services\Pirep;

use App\Models\Aircraft;
use App\Models\Contract;
use App\Models\ContractCargo;
use App\Models\Fleet;
use App\Models\Pirep;
use App\Models\PirepCargo;
use App\Models\User;
use App\Services\PirepService;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\DB;
use Tests\TestCase;

class FindInactivePirepsTest extends TestCase
{
    use RefreshDatabase;

    protected Model $user;
    protected Model $pirep;
    protected Model $contract;
    protected Model $fleet;
    protected Model $aircraft;
    protected PirepService $pirepService;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->pirepService = new PirepService();

        $this->user = User::factory()->create([
            'rank_id' => 1,
            'flights_time' => 299,
            'points' => 49,
            'created_at' => Carbon::now()->addYears(-2)
        ]);
        $this->fleet = Fleet::factory()->create();
        $this->aircraft = Aircraft::factory()->create([
            'fleet_id' => $this->fleet->id,
            'fuel_onboard' => 50,
            'current_airport_id' => 'AYMR',
            'user_id' => $this->user->id
        ]);

        $this->contract = Contract::factory()->create([
            'contract_value' => 250.00,
            'dep_airport_id' => 'AYMR',
            'arr_airport_id' => 'AYMN'
        ]);
    }
    /**
     * A basic unit test example.
     *
     * @return void
     */
    public function test_pirep_not_removed()
    {
        $this->pirep = Pirep::factory()->create([
            'user_id' => $this->user->id,
            'destination_airport_id' => $this->contract->arr_airport_id,
            'departure_airport_id' => $this->contract->dep_airport_id,
            'aircraft_id' => $this->aircraft->id,
            'created_at' => Carbon::now()
        ]);

        $pireps = $this->pirepService->findInactivePireps();

        $this->assertEquals(0, $pireps->count());
    }

    public function test_pireps_will_be_removed()
    {
        $this->pirep = Pirep::factory()->create([
            'user_id' => $this->user->id,
            'destination_airport_id' => $this->contract->arr_airport_id,
            'departure_airport_id' => $this->contract->dep_airport_id,
            'aircraft_id' => $this->aircraft->id,
            'created_at' => Carbon::now()->subHours(3)
        ]);

        $pireps = $this->pirepService->findInactivePireps();

        $this->assertEquals(1, $pireps->count());
    }
}
