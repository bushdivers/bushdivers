<?php

namespace Tests\Unit\Services\Pirep;

use App\Models\Aircraft;
use App\Models\Booking;
use App\Models\Fleet;
use App\Models\Flight;
use App\Models\Pirep;
use App\Models\Rank;
use App\Models\User;
use App\Services\PirepService;
use Database\Seeders\RankSeeder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Artisan;
use Tests\TestCase;

class CalculatePilotPayTest extends TestCase
{
    use RefreshDatabase;

    protected Model $user;
    protected Model $pirep;
    protected Model $flight;
    protected Model $booking;
    protected Model $fleet;
    protected Model $aircraft;

    protected function setUp(): void
    {

        parent::setUp(); // TODO: Change the autogenerated stub
        Artisan::call('db:seed --class=RankSeeder');
        $this->user = User::factory()->create([
            'rank_id' => 1
        ]);
        $this->fleet = Fleet::factory()->create();
        $this->aircraft = Aircraft::factory()->create([
            'fleet_id' => $this->fleet->id
        ]);
        $this->flight = Flight::factory()->create();
        $this->booking = Booking::factory()->create([
            'user_id' => $this->user->id,
            'flight_id' => $this->flight->id,
        ]);
        $this->pirep = Pirep::factory()->create([
            'user_id' => $this->user->id,
            'flight_id' => $this->flight->id,
            'aircraft_id' => $this->aircraft->id,
            'booking_id' => $this->booking->id,
            'flight_time' => 45
        ]);
    }

    /**
     * A basic unit test example.
     *
     * @return void
     */
    public function test_pay_calculated_for_trainee_45m()
    {
        $pirepService = new PirepService();

        $rank = Rank::where('name', 'Trainee')->first();
        $duration = 45 / 60;
        $pay = $duration * $rank->pilot_pay;
        $pirepService->calculatePilotPay($this->pirep);
        $this->assertDatabaseHas('users', ['account_balance' => $pay]);
    }
}
