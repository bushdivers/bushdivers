<?php

namespace Tests\Unit\Services\Pirep;

use App\Models\Aircraft;
use App\Models\Contract;
use App\Models\ContractCargo;
use App\Models\Fleet;
use App\Models\Pirep;
use App\Models\PirepCargo;
use App\Models\Rank;
use App\Models\User;
use App\Services\Pireps\CalculatePilotPay;
use Carbon\Carbon;
use Database\Seeders\RankSeeder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Artisan;
use Tests\TestCase;

class CalculatePilotPayTest extends TestCase
{
    use RefreshDatabase;

    protected Model $user;
    protected Model $pirep;
    protected Model $flight;
    protected Model $booking;
    protected Model $fleet;
    protected Model $aircraft;
    protected Model $contract;
    protected Model $contractCargo;
    protected CalculatePilotPay $calculatePilotPay;

    protected function setUp(): void
    {

        parent::setUp(); // TODO: Change the autogenerated stub
        $this->calculatePilotPay = $this->app->make(CalculatePilotPay::class);
        Artisan::call('db:seed --class=RankSeeder');
        $this->user = User::factory()->create([
            'rank_id' => 1
        ]);
        $this->fleet = Fleet::factory()->create();
        $this->aircraft = Aircraft::factory()->create([
            'fleet_id' => $this->fleet->id,
            'user_id' => $this->user->id
        ]);

        $this->contract = Contract::factory()->create([
            'is_completed' => true,
            'completed_at' => Carbon::now()
        ]);
        $this->contractCargo = ContractCargo::factory()->create([
            'contract_id' => $this->contract->id,
            'current_airport_id' => $this->contract->arr_airport_id,
            'is_completed' => true,
            'completed_at' => Carbon::now()
        ]);

        $this->pirep = Pirep::factory()->create([
            'user_id' => $this->user->id,
            'destination_airport_id' => $this->contract->arr_airport_id,
            'departure_airport_id' => $this->contract->dep_airport_id,
            'aircraft_id' => $this->aircraft
        ]);

        $this->pirepCargo = PirepCargo::factory()->create([
            'pirep_id' => $this->pirep->id,
            'contract_cargo_id' => $this->contractCargo->id
        ]);
    }

    /**
     * A basic unit test example.
     *
     * @return void
     */

//    public function test_pay_added_to_user_account_ledger()
//    {
//
//        $rank = Rank::where('name', 'Trainee')->first();
//        $pay = $this->contract->contract_value;
//        $this->calculatePilotPay->execute($this->pirep);
//        $this->assertDatabaseHas('user_accounts', [
//            'user_id' => $this->pirep->user_id,
//            'total' => $pay,
//            'flight_id' => $this->pirep->id
//        ]);
//    }
}
